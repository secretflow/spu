# Copyright 2022 Ant Group Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("//bazel:spu.bzl", "spu_cc_library", "spu_cc_test")
load("@rules_proto//proto:defs.bzl", "proto_library")
load("@rules_cc//cc:defs.bzl", "cc_proto_library")

package(default_visibility = ["//visibility:public"])

spu_cc_library(
    name = "scope_disk_cache",
    srcs = ["scope_disk_cache.cc"],
    hdrs = ["scope_disk_cache.h"],
    deps = [
        "//spu/psi/io",
        "@llvm-project//llvm:Support",
        "@yasl//yasl/base:exception",
    ],
)

spu_cc_library(
    name = "hash_bucket_cache",
    srcs = ["hash_bucket_cache.cc"],
    hdrs = ["hash_bucket_cache.h"],
    deps = [
        ":scope_disk_cache",
        "//spu/psi/utils:batch_provider",
        "@com_google_absl//absl/strings",
    ],
)

spu_cc_library(
    name = "csv_checker",
    srcs = ["csv_checker.cc"],
    hdrs = ["csv_checker.h"],
    deps = [
        "//spu/psi/io",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/time",
        "@yasl//yasl/base:exception",
        "@yasl//yasl/crypto:hash_util",
        "@yasl//yasl/utils:scope_guard",
    ],
)

spu_cc_library(
    name = "serialize",
    hdrs = ["serialize.h"],
    deps = [
        ":serializable_cc_proto",
        "@yasl//yasl/base:buffer",
    ],
)

proto_library(
    name = "serializable_proto",
    srcs = ["serializable.proto"],
)

cc_proto_library(
    name = "serializable_cc_proto",
    deps = [":serializable_proto"],
)

spu_cc_library(
    name = "csv_header_analyzer",
    hdrs = ["csv_header_analyzer.h"],
    deps = [
        "@yasl//yasl/base:exception",
    ],
)

spu_cc_test(
    name = "csv_checker_test",
    srcs = ["csv_checker_test.cc"],
    deps = [
        ":csv_checker",
    ],
)

spu_cc_library(
    name = "cipher_store",
    srcs = ["cipher_store.cc"],
    hdrs = ["cipher_store.h"],
    deps = [
        ":hash_bucket_cache",
    ],
)

spu_cc_library(
    name = "batch_provider",
    srcs = ["batch_provider.cc"],
    hdrs = ["batch_provider.h"],
    deps = [
        ":csv_header_analyzer",
        ":utils",
        "//spu/psi/io",
        "@com_google_absl//absl/strings",
    ],
)

spu_cc_library(
    name = "resource",
    srcs = ["resource.cc"],
    hdrs = ["resource.h"],
    deps = [
        ":hash_bucket_cache",
        "@com_google_absl//absl/strings",
        "@yasl//yasl/base:exception",
    ],
)

spu_cc_library(
    name = "test_utils",
    hdrs = ["test_utils.h"],
)

spu_cc_library(
    name = "utils",
    srcs = ["utils.cc"],
    hdrs = ["utils.h"],
    deps = [
        ":csv_header_analyzer",
        "//spu/psi/io",
        "@yasl//yasl/base:exception",
        "@yasl//yasl/link",
    ],
)
