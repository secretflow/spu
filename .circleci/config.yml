# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
parameters:
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  ut:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: registry.hub.docker.com/secretflow/secretflow-gcc11-anolis-dev:0.3
    resource_class: xlarge
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: "bazel test"
          command: "bazel test //spu/... --ui_event_filters=-info,-debug,-warning --jobs=8 --test_timeout=1800 --test_output=errors"
      - store_test_results:
          path: ./bazel-testlogs
  test_pypi_publish:
    docker:
      - image: registry.hub.docker.com/secretflow/secretflow-gcc11-centos7-release:0.1
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: "build package and publish"
          command: |
            set -ex
            env BAZEL_MAX_JOBS=8 sh ./build_wheel_entrypoint.sh
            spu_wheel_name=$(<./spu_wheel.name)
            spu_wheel_path="./${spu_wheel_name//sf-spu/sf_spu}"
            python3 -m pip install twine
            python3 -m twine upload -r testpypi -u __token__ -p ${TEST_PYPI_TWINE_TOKEN} $spu_wheel_path

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  default:
    jobs:
      - ut
  publish:
    when: << pipeline.parameters.GHA_Action >>
    jobs:
      - test_pypi_publish
    
