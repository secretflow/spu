# Copyright 2023 Ant Group Co., Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

parameters:
  GHA_Action:
    type: string
    default: ""
  GHA_Actor:
    type: string
    default: ""
  GHA_Event:
    type: string
    default: ""

executors:
  linux_x64_executor: # declares a reusable executor
    docker:
      - image: secretflow/release-ci:latest
    resource_class: 2xlarge
    shell: /bin/bash --login -eo pipefail
  linux_aarch64_executor:
    docker:
      - image: secretflow/release-ci-aarch64:latest
    resource_class: arm.2xlarge
    shell: /bin/bash --login -eo pipefail

commands:
  build_and_upload:
    parameters:
      python_ver:
        type: string
    steps:
      - run:
          name: "build package and publish"
          command: |
            set +e
            conda create -n build python=<< parameters.python_ver >> -y
            conda activate build

            sh ./build_wheel_entrypoint.sh
            python3 -m pip install twine
            ls dist/*.whl

            python3 -m twine upload -r pypi -u __token__ -p ${PYPI_TWINE_TOKEN} dist/*.whl

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  macOS_publish:
    macos:
      xcode: 15.1.0
    resource_class: macos.m1.large.gen1
    parameters:
      python_ver:
        type: string
    steps:
      - checkout
      - run:
          name: "Install homebrew dependencies"
          command: |
            brew install bazelisk cmake ninja libomp wget
      - run:
          name: "Install Miniconda"
          command: |
            wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh -O ~/miniconda.sh
            bash ~/miniconda.sh -b -p $HOME/miniconda
            source $HOME/miniconda/bin/activate
            conda init zsh bash
      - build_and_upload:
          python_ver: <<parameters.python_ver>>
  linux_publish:
    parameters:
      python_ver:
        type: string
      executor:
        type: string
    executor: <<parameters.executor>>
    steps:
      - checkout
      - build_and_upload:
          python_ver: <<parameters.python_ver>>

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  publish:
    jobs:
      - linux_publish:
          matrix:
            parameters:
              python_ver: ["3.9", "3.10", "3.11"]
              executor: ["linux_x64_executor", "linux_aarch64_executor"]
          filters:
            tags:
              only: /.*(?<!dev\d{8})$/
      - macOS_publish:
          matrix:
            parameters:
              python_ver: ["3.9", "3.10", "3.11"]
          filters:
            tags:
              only: /.*(?<!dev\d{8})$/
      - linux_publish:
          name: linux_dev_publish-<<matrix.resource_class>>
          matrix:
            parameters:
              python_ver: ["3.10"]
              executor: ["linux_x64_executor", "linux_aarch64_executor"]
          filters:
            tags:
              only: /.*(?<=dev\d{8})$/
      - macOS_publish:
          name: macOS_dev_publish
          matrix:
            parameters:
              python_ver: ["3.9", "3.10", "3.11"]
          filters:
            tags:
              only: /.*(?<=dev\d{8})$/
