# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021 Ant Group Co., Ltd.
# This file is distributed under the same license as the SPU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SPU \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-13 15:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../getting_started/introduction.rst:2
msgid "What is SPU?"
msgstr "SPU 是什么？"

#: ../../getting_started/introduction.rst:4
msgid ""
"SPU (Secure Processing Unit) is a domain-specific **compiler and runtime "
"suite**, that aims to provide a **secure computation** service with "
"**provable security**."
msgstr "SPU（安全处理单元）是一个专门设计的编译器和运行时套件，旨在提供具有可验证安全性的安全计算服务。"

#: ../../getting_started/introduction.rst:6
msgid ""
"SPU compiler uses `XLA "
"<https://www.tensorflow.org/xla/operation_semantics>`_ as its front-end "
"Intermediate Representation (IR), therefore, SPU supports the XLA IR "
"outputs from Tensorflow, Jax, or PyTorch. Internally, the SPU compiler "
"compiles XLA to an MPC specific MLIR dialect which is later interpreted "
"by SPU runtime. Currently, SPU team highly recommends using `JAX "
"<https://github.com/google/jax>`_ and its sibling - `Flax "
"<https://github.com/google/flax>`_."
msgstr "SPU 编译器使用 XLA 作为其前端中间层表示，因此支持 TensorFlow、JAX 和 PyTorch 的 XLA IR 输出。SPU 内部会将 XLA 编译为 MPC 专属的 MLIR 方言，并由运行时解释执行。SPU 团队推荐使用 JAX 及其姊妹框架 Flax。"

#: ../../getting_started/introduction.rst:8
msgid ""
"SPU runtime implements various `MPC <https://en.wikipedia.org/wiki"
"/Secure_multi-party_computation>`_ protocols (as the back-end) to provide"
" **provable security**. SPU runtime is designed to be **highly "
"extensible**, protocol developers can hack into MPC protocols with "
"minimum effort and let the SPU compiler/runtime translate and interpret "
"complicated frontend logic on it."
msgstr "SPU 运行时（后端）实现了多种多方计算协议，以提供安全保障。SPU 运行时设计高度可扩展，协议开发者能够便捷地定制开发多方计算协议，并使 SPU 编译器/运行时翻译和解释复杂的前端逻辑。"

#: ../../getting_started/introduction.rst:14
msgid "High-level system architecture of SPU"
msgstr ""

