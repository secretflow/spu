# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021 Ant Group Co., Ltd.
# This file is distributed under the same license as the SPU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SPU \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-13 15:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../reference/py_api.rst:2
msgid "Python API Reference"
msgstr ""

#: ../../reference/py_api.rst:4
msgid ""
"Python API is used to control & access SPU, for example, to do data "
"infeed/outfeed, to compile an XLA program to PPHlo, or to fire a PPHlo on"
" an SPU runtime."
msgstr ""

#: ../../reference/py_api.rst:8
msgid "Runtime Setup"
msgstr ""

#: of spu.api.Runtime:1
msgid "The SPU Virtual Machine Slice."
msgstr ""

#: of spu.api.Runtime.clear:1
msgid "Delete all SPU values."
msgstr ""

#: of spu.api.Runtime.del_var:1
msgid "Delete an SPU value."
msgstr ""

#: of spu.api.Io.make_shares:3 spu.api.Io.reconstruct:3
#: spu.api.Runtime.del_var:3 spu.api.Runtime.get_var:3
#: spu.api.Runtime.get_var_chunk_count:3 spu.api.Runtime.get_var_meta:3
#: spu.api.Runtime.run:3 spu.api.Runtime.set_var:3 spu.api.compile:3
#: spu.utils.simulation.Simulator.simple:3
msgid "Args:"
msgstr ""

#: of spu.api.Runtime.del_var:4
msgid "name (str): Id of the value."
msgstr ""

#: of spu.api.Runtime.get_var:1 spu.api.Runtime.get_var_chunk_count:1
msgid "Get an SPU value."
msgstr ""

#: of spu.api.Runtime.get_var:4 spu.api.Runtime.get_var_chunk_count:4
#: spu.api.Runtime.get_var_meta:4
msgid "name (str): Id of value."
msgstr ""

#: of spu.api.Io.make_shares:8 spu.api.Io.reconstruct:6
#: spu.api.Runtime.get_var:6 spu.api.Runtime.get_var_chunk_count:6
#: spu.api.Runtime.get_var_meta:6 spu.api.compile:7
#: spu.utils.simulation.Simulator.simple:10
msgid "Returns:"
msgstr ""

#: of spu.api.Runtime.get_var:7
msgid "libspu.Share: Data data."
msgstr ""

#: of spu.api.Runtime.get_var_chunk_count:7
msgid "int: chunks count in libspu.Share"
msgstr ""

#: of spu.api.Runtime.get_var_meta:1
msgid "Get an SPU value without content."
msgstr ""

#: of spu.api.Runtime.get_var_meta:7
msgid "libspu.ValueMeta: Data meta with out content."
msgstr ""

#: of spu.api.Runtime.run:1
msgid "Run an SPU executable."
msgstr ""

#: of spu.api.Runtime.run:4
msgid "executable (libspu.ExecutableProto): executable."
msgstr ""

#: of spu.api.Runtime.set_var:1
msgid "Set an SPU value."
msgstr ""

#: of spu.api.Runtime.set_var:4
msgid "name (str): Id of value. value (libspu.Share): value data."
msgstr ""

#: ../../reference/py_api.rst:15
msgid "Runtime IO"
msgstr ""

#: of spu.api.Io:1
msgid "The SPU IO interface."
msgstr ""

#: of spu.api.Io.make_shares:1
msgid "Convert from NumPy array to list of SPU value(s)."
msgstr ""

#: of spu.api.Io.make_shares:4
msgid ""
"x (np.ndarray): input. vtype (libspu.Visibility): visibility. owner_rank "
"(int): the index of the trusted piece. if >= 0, colocation optimization "
"may be applied."
msgstr ""

#: of spu.api.Io.make_shares:9
msgid "[libspu.Share]: output."
msgstr ""

#: of spu.api.Io.reconstruct:1
msgid "Convert from list of SPU value(s) to NumPy array."
msgstr ""

#: of spu.api.Io.reconstruct:4
msgid "xs ([libspu.Share]): input."
msgstr ""

#: of spu.api.Io.reconstruct:7
msgid "np.ndarray: output."
msgstr ""

#: ../../reference/py_api.rst:21
msgid "Compiler"
msgstr ""

#: of spu.api.compile:1
msgid "Compile from textual HLO/MHLO IR to SPU bytecode."
msgstr ""

#: of spu.api.compile:4
msgid ""
"source (libspu.CompilationSource): input to compiler. copts "
"(libspu.CompilerOptions): compiler options."
msgstr ""

#: of spu.api.compile:8
msgid "[libspu.ValueProto]: output."
msgstr ""

#: ../../reference/py_api.rst:26
msgid "Simulation"
msgstr ""

#: of spu.utils.simulation.Simulator.simple:1
msgid "helper method to create an SPU Simulator"
msgstr ""

#: of spu.utils.simulation.Simulator.simple:4
msgid "wsize (int): the world size."
msgstr ""

#: of spu.utils.simulation.Simulator.simple:6
msgid "prot (libspu.ProtocolKind): protocol."
msgstr ""

#: of spu.utils.simulation.Simulator.simple:8
msgid "field (libspu.FieldType): field type."
msgstr ""

#: of spu.utils.simulation.Simulator.simple:11
msgid "A SPU Simulator"
msgstr ""

#: of spu.utils.simulation.sim_jax:1
msgid "Decorates a jax numpy fn that simulated on SPU."
msgstr ""

#: of spu.utils.simulation.sim_jax:6
msgid "Then we can call spu_fn like normal jnp fn."
msgstr ""

#: of spu.utils.simulation.sim_jax:12
msgid "The function will be evaluated in an spu simulator."
msgstr ""

