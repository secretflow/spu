# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021 Ant Group Co., Ltd.
# This file is distributed under the same license as the SPU package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: SPU\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-13 15:10+0800\n"
"PO-Revision-Date: 2025-05-22 21:05+0800\n"
"Last-Translator: \n"
"Language-Team: zh_CN <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"Generated-By: Babel 2.17.0\n"
"X-Generator: Poedit 3.6\n"

#: ../../development/compiler.rst:2
msgid "SPU Compiler"
msgstr "SPU 编译器"

#: ../../development/compiler.rst:4
msgid ""
"The SPU compiler aims to provide first-party compiler support from the "
"different ML frameworks to SPU runtime."
msgstr "SPU 编译器旨在为 SPU 运行时提供来自不同 ML 框架的原生编译器支持。"

#: ../../development/compiler.rst:7
msgid ""
"`MLIR <https://mlir.llvm.org/>`_ The MLIR project is a novel approach to "
"building reusable and extensible compiler infrastructure. MLIR aims to "
"address software fragmentation, improve compilation for heterogeneous "
"hardware, significantly reduce the cost of building domain specific "
"compilers, and aid in connecting existing compilers together."
msgstr ""
"MLIR：MLIR 项目是一种构建可重复使用、可扩展的编译器基础架构的新方法。MLIR 旨"
"在解决软件碎片化问题、改进异构硬件的编译、大幅降低构建特定领域编译器的成本，"
"并帮助将现有编译器连接在一起。"

#: ../../development/compiler.rst:9
msgid ""
"`XLA <https://www.tensorflow.org/xla/architecture>`_ Multiple Vendors use "
"XLA as the middle layer, mapping from platform frameworks like PyTorch, JAX, "
"and TensorFlow into XLA and then progressively lowering down to their target "
"hardware."
msgstr ""
"XLA：多家供应商使用 XLA 作为中间层，从 PyTorch、JAX 和 TensorFlow 等平台框架"
"映射到 XLA，然后逐步翻译到目标硬件。"

#: ../../development/compiler.rst:11
msgid ""
"`MLIR-HLO <https://github.com/tensorflow/mlir-hlo>`_ MLIR-HLO project "
"connects XLA into MLIR world."
msgstr "MLIR-HLO：MLIR-HLO 项目将 XLA 连接到 MLIR。"

#: ../../development/compiler.rst:13
msgid ""
"Having canonical lowerings from different frontend frameworks to the MLIR "
"ecosystem would provide much needed relief to hardware vendors to focus on "
"their unique value rather than implementing yet another frontend for SPU. "
"For current hardware vendors, they just need to add LLVM target support "
"instead of implementing separate Clang/C++ frontends. MLIR-HLO is achieving "
"similar goal."
msgstr ""
"将不同前端框架的规范翻译到 MLIR 生态系统，将为硬件供应商提供有效的帮助，使他"
"们能够专注于其独特价值，而不是为 SPU 实现另一个前端。对于当前的硬件供应商，他"
"们只需添加 LLVM 支持，而不是实现单独的 Clang/C++ 前端。MLIR-HLO 正在实现类似"
"的目标。"

#: ../../development/compiler.rst:17
msgid "All the roads from ML frameworks to SPU"
msgstr "ML 框架到 SPU 的层次结构"
