diff --git a/third_party/tsl/tsl/lib/gtl/BUILD b/third_party/tsl/tsl/lib/gtl/BUILD
index 36ad40fd1..fbd8038bc 100644
--- a/third_party/tsl/tsl/lib/gtl/BUILD
+++ b/third_party/tsl/tsl/lib/gtl/BUILD
@@ -10,27 +10,7 @@ load(
 
 package(
     # copybara:uncomment default_applicable_licenses = ["//third_party/tensorflow:license"],
-    default_visibility = [
-        # tensorflow/core:lib effectively exposes all targets under tensorflow/core/lib/**
-        "//third_party/tensorflow/core:__pkg__",
-        # tensorflow/core/lib/strings:proto_serialization uses on gtl:inlined_vector
-        "//third_party/tensorflow/core/lib/strings:__pkg__",
-        "//tsl/lib/strings:__pkg__",
-        # tensorflow/core/framework uses map_util, and flatmap
-        "//third_party/tensorflow/core/framework:__pkg__",
-        "//tsl/framework:__pkg__",
-        "//tsl/platform/cloud:__pkg__",
-        # tensorflow/core/util uses inlined_vector
-        "//third_party/tensorflow/core/util:__pkg__",
-        # tensorflow/core/tfrt/utils uses inlined_vector
-        "//third_party/tensorflow/core/tfrt/utils:__pkg__",
-        # tensorflow/examples/custom_ops_doc/simple_hash_table uses map_util
-        "//third_party/tensorflow/examples/custom_ops_doc/simple_hash_table:__pkg__",
-        "//third_party/tensorflow/compiler/xla:__subpackages__",
-        "//third_party/tensorflow/core/lib/gtl:__subpackages__",
-        "//tsl/distributed_runtime/rpc:__pkg__",
-        "//tsl/profiler/utils:__pkg__",
-    ],
+    default_visibility = ["//visibility:public"],
     licenses = ["notice"],
 )
 
diff --git a/third_party/tsl/tsl/lib/io/BUILD b/third_party/tsl/tsl/lib/io/BUILD
index 981a3fb5b..e5518b241 100644
--- a/third_party/tsl/tsl/lib/io/BUILD
+++ b/third_party/tsl/tsl/lib/io/BUILD
@@ -7,16 +7,7 @@ load(
 
 package(
     # copybara:uncomment default_applicable_licenses = ["//third_party/tensorflow:license"],
-    default_visibility = [
-        "//third_party/tensorflow/c/experimental/filesystem:__pkg__",
-        "//third_party/tensorflow/c/experimental/filesystem/plugins/posix:__pkg__",
-        "//tsl/lib/io/snappy:__pkg__",
-        "//third_party/tensorflow/compiler/xla:__subpackages__",
-        # tensorflow/core:lib effectively exposes all targets under tensorflow/core/lib/**
-        "//third_party/tensorflow/core:__pkg__",
-        "//third_party/tensorflow/core/lib/io:__subpackages__",
-        "//tsl/profiler:__subpackages__",
-    ],
+    default_visibility = ["//visibility:public"],
     licenses = ["notice"],
 )
 
diff --git a/third_party/tsl/tsl/lib/math/BUILD b/third_party/tsl/tsl/lib/math/BUILD
index 1c7c6e43f..ac536ecf0 100644
--- a/third_party/tsl/tsl/lib/math/BUILD
+++ b/third_party/tsl/tsl/lib/math/BUILD
@@ -6,9 +6,7 @@ load(
 
 package(
     # copybara:uncomment default_applicable_licenses = ["//third_party/tensorflow:license"],
-    default_visibility = [
-        "//third_party/tensorflow:__subpackages__",
-    ],
+    default_visibility = ["//visibility:public"],
     licenses = ["notice"],
 )
 
@@ -16,11 +14,7 @@ cc_library(
     name = "math_util",
     hdrs = ["math_util.h"],
     compatible_with = get_compatible_with_portable(),
-    visibility = [
-        "//platforms/performance/tf_sim/utils:__subpackages__",
-        "//platforms/xla/service:__subpackages__",
-        "//third_party/tensorflow:__subpackages__",
-    ],
+    visibility = ["//visibility:public"],
     deps = [
         "//tsl/platform:logging",
         "//tsl/platform:types",
diff --git a/third_party/tsl/tsl/lib/strings/BUILD b/third_party/tsl/tsl/lib/strings/BUILD
index 55538aece..e4dc747f9 100644
--- a/third_party/tsl/tsl/lib/strings/BUILD
+++ b/third_party/tsl/tsl/lib/strings/BUILD
@@ -10,12 +10,7 @@ cc_library(
     name = "proto_serialization",
     srcs = ["proto_serialization.cc"],
     hdrs = ["proto_serialization.h"],
-    visibility = [
-        "//third_party/tensorflow/compiler/xla/python:__pkg__",
-        "//third_party/tensorflow/compiler/xla/service:__pkg__",
-        "//third_party/tensorflow/compiler/xla/stream_executor:__pkg__",
-        "//third_party/tensorflow/core/lib/strings:__pkg__",
-    ],
+    visibility = ["//visibility:public"],
     deps = [
         "//tsl/lib/gtl:inlined_vector",
         "//tsl/platform:hash",
diff --git a/third_party/tsl/tsl/platform/default/BUILD b/third_party/tsl/tsl/platform/default/BUILD
index 6dbffc29a..cb6a2ca2b 100644
--- a/third_party/tsl/tsl/platform/default/BUILD
+++ b/third_party/tsl/tsl/platform/default/BUILD
@@ -6,10 +6,7 @@ load("//tsl/platform:rules_cc.bzl", "cc_library")
 
 package(
     # copybara:uncomment default_applicable_licenses = ["//third_party/tensorflow:license"],
-    default_visibility = [
-        "//third_party/tensorflow/core/platform:__pkg__",
-        "//tsl/platform:__pkg__",
-    ],
+    default_visibility = ["//visibility:public"],
     licenses = ["notice"],
 )
 
@@ -554,7 +551,7 @@ cc_library(
         "nobuilder",
     ],
     textual_hdrs = ["status.h"],
-    visibility = ["//third_party/tensorflow:__subpackages__"],
+    visibility = ["//visibility:public"],
     deps = [
         "//tsl/platform:types",
         "//tsl/protobuf:error_codes_proto_impl_cc",
diff --git a/third_party/tsl/tsl/protobuf/BUILD b/third_party/tsl/tsl/protobuf/BUILD
index 85c7415dc..481a54fbf 100644
--- a/third_party/tsl/tsl/protobuf/BUILD
+++ b/third_party/tsl/tsl/protobuf/BUILD
@@ -9,11 +9,7 @@ load(
 
 package(
     # copybara:uncomment default_applicable_licenses = ["//third_party/tensorflow:license"],
-    default_visibility = [
-        "//third_party/tensorflow/core:__subpackages__",
-        "//third_party/tensorflow_models:__subpackages__",
-        "//tsl:internal",
-    ],
+    default_visibility = ["//visibility:public"],
     features = if_google(["-parse_headers"]),
     licenses = ["notice"],
 )
diff --git a/third_party/vendored.bzl b/third_party/vendored.bzl
new file mode 100644
index 000000000..34ad77d46
--- /dev/null
+++ b/third_party/vendored.bzl
@@ -0,0 +1,18 @@
+def _vendored_impl(repository_ctx):
+    parent_path = repository_ctx.path(repository_ctx.attr.parent).dirname
+    # get_child doesn't allow slashes. Yes this is silly. bazel_skylib paths
+    # doesn't work with path objects.
+    relpath_parts = repository_ctx.attr.relpath.split("/")
+    vendored_path = parent_path
+    for part in relpath_parts:
+      vendored_path = vendored_path.get_child(part)
+    repository_ctx.symlink(vendored_path, ".")
+
+
+vendored = repository_rule(
+    implementation = _vendored_impl,
+    attrs = {
+        "parent": attr.label(default = "//:WORKSPACE"),
+        "relpath": attr.string(),
+    },
+)
diff --git a/workspace2.bzl b/workspace2.bzl
index 625a60291..9620f585d 100644
--- a/workspace2.bzl
+++ b/workspace2.bzl
@@ -2,7 +2,7 @@
 
 # Import third party config rules.
 load("@bazel_skylib//lib:versions.bzl", "versions")
-load("@bazel_skylib//lib:paths.bzl", "paths")
+load("//third_party:vendored.bzl", "vendored")
 load("//third_party/gpus:cuda_configure.bzl", "cuda_configure")
 load("//third_party/gpus:rocm_configure.bzl", "rocm_configure")
 load("//third_party/tensorrt:tensorrt_configure.bzl", "tensorrt_configure")
@@ -39,7 +39,7 @@ load("//tools/toolchains/remote_config:configs.bzl", "initialize_rbe_configs")
 load("//tools/toolchains/remote:configure.bzl", "remote_execution_configure")
 load("//tools/toolchains/clang6:repo.bzl", "clang6_configure")
 
-def _initialize_third_party(xla_path):
+def _initialize_third_party():
     """ Load third party repositories.  See above load() statements. """
     absl()
     benchmark()
@@ -54,7 +54,7 @@ def _initialize_third_party(xla_path):
     tensorrt()
     triton()
 
-    native.local_repository(name = "tsl", path = paths.join(xla_path + "third_party/tsl"))
+    vendored(name = "tsl", relpath = "third_party/tsl")
 
 # Toolchains & platforms required by Tensorflow to build.
 def _tf_toolchains():
@@ -146,7 +146,7 @@ def _tf_repositories():
 
     tf_http_archive(
         name = "mkl_dnn",
-        build_file = "@//third_party/mkl_dnn:mkldnn.BUILD",
+        build_file = "//third_party/mkl_dnn:mkldnn.BUILD",
         sha256 = "a0211aeb5e7dad50b97fa5dffc1a2fe2fe732572d4164e1ee8750a2ede43fbec",
         strip_prefix = "oneDNN-0.21.3",
         urls = tf_mirror_urls("https://github.com/oneapi-src/oneDNN/archive/v0.21.3.tar.gz"),
@@ -154,7 +154,7 @@ def _tf_repositories():
 
     tf_http_archive(
         name = "mkl_dnn_v1",
-        build_file = "@//third_party/mkl_dnn:mkldnn_v1.BUILD",
+        build_file = "//third_party/mkl_dnn:mkldnn_v1.BUILD",
         sha256 = "dc2b9bc851cd8d5a6c4622f7dc215bdb6b32349962875f8bf55cceed45a4c449",
         strip_prefix = "oneDNN-2.7.1",
         urls = tf_mirror_urls("https://github.com/oneapi-src/oneDNN/archive/refs/tags/v2.7.1.tar.gz"),
@@ -162,8 +162,8 @@ def _tf_repositories():
 
     tf_http_archive(
         name = "mkl_dnn_acl_compatible",
-        build_file = "@//third_party/mkl_dnn:mkldnn_acl.BUILD",
-        patch_file = ["@//third_party/mkl_dnn:onednn_acl_threadcap.patch", "@//third_party/mkl_dnn:onednn_acl_fixed_format_kernels.patch", "@//third_party/mkl_dnn:onednn_acl_depthwise_convolution.patch"],
+        build_file = "//third_party/mkl_dnn:mkldnn_acl.BUILD",
+        patch_file = ["//third_party/mkl_dnn:onednn_acl_threadcap.patch", "//third_party/mkl_dnn:onednn_acl_fixed_format_kernels.patch", "//third_party/mkl_dnn:onednn_acl_depthwise_convolution.patch"],
         sha256 = "a50993aa6265b799b040fe745e0010502f9f7103cc53a9525d59646aef006633",
         strip_prefix = "oneDNN-2.7.3",
         urls = tf_mirror_urls("https://github.com/oneapi-src/oneDNN/archive/v2.7.3.tar.gz"),
@@ -605,7 +605,7 @@ def _tf_repositories():
 
 # buildifier: disable=function-docstring
 # buildifier: disable=unnamed-macro
-def workspace(xla_path = "./"):
+def workspace():
     # Check the bazel version before executing any repository rules, in case
     # those rules rely on the version we require here.
     versions.check("1.0.0")
@@ -614,7 +614,7 @@ def workspace(xla_path = "./"):
     _tf_toolchains()
 
     # Import third party repositories according to go/tfbr-thirdparty.
-    _initialize_third_party(xla_path)
+    _initialize_third_party()
 
     # Import all other repositories. This should happen before initializing
     # any external repositories, because those come with their own
diff --git a/xla/hlo/evaluator/BUILD b/xla/hlo/evaluator/BUILD
index 47dff7bb5..92dc83ff4 100644
--- a/xla/hlo/evaluator/BUILD
+++ b/xla/hlo/evaluator/BUILD
@@ -6,7 +6,7 @@ load("//xla:xla.bzl", "xla_cc_test")
 
 package(
     # copybara:uncomment default_applicable_licenses = ["//third_party/tensorflow:license"],
-    default_visibility = [":friends"],
+    default_visibility = ["//visibility:public"],
     licenses = ["notice"],
 )
 
diff --git a/xla/service/BUILD b/xla/service/BUILD
index ba28fb52d..8ee1f5c62 100644
--- a/xla/service/BUILD
+++ b/xla/service/BUILD
@@ -30,7 +30,7 @@ load("//xla/service:xla_compile.bzl", "xla_aot_compile_cpu", "xla_aot_compile_gp
 
 package(
     # copybara:uncomment default_applicable_licenses = ["//third_party/tensorflow:license"],
-    default_visibility = [":friends"],
+    default_visibility = ["//visibility:public"],
     licenses = ["notice"],
 )
 
diff --git a/xla/service/graphcycles/BUILD b/xla/service/graphcycles/BUILD
index 2774ee69f..309ed72d0 100644
--- a/xla/service/graphcycles/BUILD
+++ b/xla/service/graphcycles/BUILD
@@ -3,9 +3,7 @@ load("//xla:xla.bzl", "xla_cc_test")
 
 package(
     # copybara:uncomment default_applicable_licenses = ["//third_party/tensorflow:license"],
-    default_visibility = [
-        "//third_party/tensorflow/compiler:__subpackages__",
-    ],
+    default_visibility = ["//visibility:public"],
     licenses = ["notice"],
 )
 
diff --git a/xla/stream_executor/BUILD b/xla/stream_executor/BUILD
index 0dd4d9f11..f063be5c7 100644
--- a/xla/stream_executor/BUILD
+++ b/xla/stream_executor/BUILD
@@ -15,7 +15,7 @@ load("@tsl//tsl:tsl.default.bzl", "filegroup")
 package(
     # copybara:uncomment default_applicable_licenses = ["//third_party/tensorflow:license"],
     default_visibility = [
-        ":friends",
+        "//visibility:public",
     ],
     licenses = ["notice"],
 )
diff --git a/xla/stream_executor/cuda/BUILD b/xla/stream_executor/cuda/BUILD
index e333e8e76..680956b59 100644
--- a/xla/stream_executor/cuda/BUILD
+++ b/xla/stream_executor/cuda/BUILD
@@ -28,7 +28,7 @@ load(
 
 package(
     # copybara:uncomment default_applicable_licenses = ["//third_party/tensorflow:license"],
-    default_visibility = [":friends"],
+    default_visibility = ["//visibility:public"],
     features = ["-layering_check"],
     licenses = ["notice"],
 )
diff --git a/xla/stream_executor/host/BUILD b/xla/stream_executor/host/BUILD
index 5969717b2..1dbe26f04 100644
--- a/xla/stream_executor/host/BUILD
+++ b/xla/stream_executor/host/BUILD
@@ -7,7 +7,7 @@ load("//xla/stream_executor:build_defs.bzl", "stream_executor_friends")
 
 package(
     # copybara:uncomment default_applicable_licenses = ["//third_party/tensorflow:license"],
-    default_visibility = [":friends"],
+    default_visibility = ["//visibility:public"],
     licenses = ["notice"],
 )
 
diff --git a/xla/stream_executor/platform/BUILD b/xla/stream_executor/platform/BUILD
index 404ba3b79..ec5990c56 100644
--- a/xla/stream_executor/platform/BUILD
+++ b/xla/stream_executor/platform/BUILD
@@ -4,7 +4,7 @@ load("//xla/stream_executor:build_defs.bzl", "stream_executor_friends")
 
 package(
     # copybara:uncomment default_applicable_licenses = ["//third_party/tensorflow:license"],
-    default_visibility = [":friends"],
+    default_visibility = ["//visibility:public"],
     licenses = ["notice"],
 )
 
diff --git a/xla/stream_executor/rocm/BUILD b/xla/stream_executor/rocm/BUILD
index 72e9d1c2f..cf77321d3 100644
--- a/xla/stream_executor/rocm/BUILD
+++ b/xla/stream_executor/rocm/BUILD
@@ -12,7 +12,7 @@ load("@tsl//tsl/platform:build_config_root.bzl", "if_static")
 
 package(
     # copybara:uncomment default_applicable_licenses = ["//third_party/tensorflow:license"],
-    default_visibility = [":friends"],
+    default_visibility = ["//visibility:public"],
     licenses = ["notice"],
 )
 
